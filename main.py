import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
import psycopg2
import os
from keep_alive import keep_alive

keep_alive()

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
TOKEN = "7191146491:AAFqpXRbyKKac6sw_wKfeP-c0n_CYU9gScM"  # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω
CHANNELS = ["@perexodniksukuna", "@sukunasoft"]  # –ö–∞–Ω–∞–ª—ã –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏

# –í–º–µ—Å—Ç–æ —Å—Å—ã–ª–æ–∫ —Ö—Ä–∞–Ω–∏–º file_id (–ø–æ–ª—É—á–µ–Ω–Ω—ã–µ —Ä–∞–Ω–µ–µ)
FILES = {
    "‚úÖ - [PC] NerestPC Free 0.32.3 üíª":
    "BQACAgQAAxkBAANOZ8cHg-2x0Hay-aR7vG-ZlZZcy_wAAnwZAAJbzThSj9620FDQfx82BA",
    "‚úÖ - [Android ROOT] Excellent Crack 0.32.3 üì±":
    "BQACAgQAAxkBAANYZ8cJYbq9pZHthzNuH6e9KRFAOkEAAogZAAJbzThSqxGG5Zaw0uU2BA"
}

bot = telebot.TeleBot(TOKEN)


# === –§–£–ù–ö–¶–ò–Ø –ü–†–û–í–ï–†–ö–ò –ü–û–î–ü–ò–°–ö–ò ===
def is_subscribed(user_id):
    for channel in CHANNELS:
        try:
            status = bot.get_chat_member(channel, user_id).status
            if status not in ["member", "administrator", "creator"]:
                return False
        except Exception:
            return False
    return True


# === –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ ===
@bot.message_handler(commands=["start"])
def send_welcome(message):
    user_id = str(message.chat.id)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç—Ä–æ–∫—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö PostgreSQL

    markup = InlineKeyboardMarkup()
    for app_name in FILES.keys():
        markup.add(InlineKeyboardButton(app_name, callback_data=app_name))
    bot.send_message(message.chat.id, "*–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:*"
                     "\n"
                     "\n"
                     ">–ù–æ —Å–Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –ø—Ä–æ–µ–∫—Ç—ã —Å–æ–∑–¥–∞—Ç–µ–ª—è"
                     "\n"
                     ">@perexodniksukuna"
                     "\n"
                     ">@sukunasoft",
                     reply_markup=markup,
                     parse_mode="MarkdownV2")


# === –û–¢–ü–†–ê–í–ö–ê –ö–ù–û–ü–ö–ò START –ù–û–í–´–ú –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø–ú ===
@bot.message_handler(content_types=["new_chat_members"])
def welcome_new_member(message):
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("üöÄ –ù–∞—á–∞—Ç—å", callback_data="start_cmd"))
    bot.send_message(message.chat.id,
                     f"–ü—Ä–∏–≤–µ—Ç, {message.new_chat_members[0].first_name}! üëã\n"
                     "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.",
                     reply_markup=markup)


# === –û–ë–†–ê–ë–û–¢–ö–ê –ù–ê–ñ–ê–¢–ò–Ø –ö–ù–û–ü–ö–ò "START" ===
@bot.callback_query_handler(func=lambda call: call.data == "start_cmd")
def start_button_pressed(call):
    send_welcome(call.message)


# === –û–ë–†–ê–ë–û–¢–ö–ê –í–´–ë–û–†–ê –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø ===
@bot.callback_query_handler(func=lambda call: call.data in FILES)
def send_file(call):
    user_id = call.from_user.id
    if is_subscribed(user_id):
        bot.send_document(user_id, FILES[call.data])  # –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–∞–π–ª
    else:
        markup = InlineKeyboardMarkup()
        for channel in CHANNELS:
            markup.add(
                InlineKeyboardButton(f"–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ {channel}",
                                     url=f"https://t.me/{channel[1:]}"))
        markup.add(
            InlineKeyboardButton("üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É",
                                 callback_data="check_sub"))
        bot.send_message(
            user_id,
            "‚ùå –í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã! –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
            reply_markup=markup)


# === –ü–†–û–í–ï–†–ö–ê –ü–û–î–ü–ò–°–ö–ò ===
@bot.callback_query_handler(func=lambda call: call.data == "check_sub")
def check_subscription(call):
    user_id = call.from_user.id
    if is_subscribed(user_id):
        bot.send_message(
            user_id,
            "‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞! –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Å–Ω–æ–≤–∞."
        )
    else:
        bot.send_message(
            user_id,
            "‚ùå –í—ã –≤—Å—ë –µ—â—ë –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã. –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑."
        )

# === –ó–ê–ü–£–°–ö –ë–û–¢–ê ===
bot.polling(none_stop=True)
