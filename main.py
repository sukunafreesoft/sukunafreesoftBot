import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
TOKEN = "7191146491:AAFqpXRbyKKac6sw_wKfeP-c0n_CYU9gScM"  # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω
CHANNELS = ["@sukunasoft", "@perexodniksukuna"]  # –ö–∞–Ω–∞–ª—ã –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏

# –í–º–µ—Å—Ç–æ —Å—Å—ã–ª–æ–∫ —Ö—Ä–∞–Ω–∏–º file_id (–ø–æ–ª—É—á–µ–Ω–Ω—ã–µ —Ä–∞–Ω–µ–µ)
FILES = {
    "üíª[PC] NerestPC Free 0.32.3": "BQACAgQAAxkBAAMeZ8mX5HupwDAyqWU82kRZFIY3iO4AAnwZAAJbzThSdA6U8VArn002BA",
    "üì±[Android ROOT] Excellent Crack 0.32.3": "BQACAgQAAxkBAAMfZ8mX5LJ3TPKEAfjakG2psV1W35wAAogZAAJbzThSN_kk0FblCfI2BA"
}

TEXTS = {
    "üíª[PC] NerestPC Free 0.32.3": "‚ÑπÔ∏è[–¢—É—Ç–æ—Ä–∏–∞–ª–∞ –ø–æ–∫–∞ –Ω–µ—Ç](https://t.me/sukunasoft)",
    "üì±[Android ROOT] Excellent Crack 0.32.3": "‚ÑπÔ∏è[–¢—É—Ç–æ—Ä–∏–∞–ª](https://t.me/sukunasoft/168)"
}

bot = telebot.TeleBot(TOKEN)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è (–Ω–µ –º–µ–Ω—é)
last_response = {}

# === –§–£–ù–ö–¶–ò–Ø –ü–†–û–í–ï–†–ö–ò –ü–û–î–ü–ò–°–ö–ò ===
def is_subscribed(user_id):
    for channel in CHANNELS:
        try:
            status = bot.get_chat_member(channel, user_id).status
            if status not in ["member", "administrator", "creator"]:
                return False
        except Exception:
            return False
    return True

# === –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ ===
@bot.message_handler(commands=["start"])
def send_welcome(message):
    user_id = message.chat.id

    markup = InlineKeyboardMarkup()
    for app_name in FILES.keys():
        markup.add(InlineKeyboardButton(app_name, callback_data=app_name))
    
    bot.send_message(
        user_id,
        "üîΩ *–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:* üîΩ\n\n"
        "‚ò£Ô∏è *–ù–æ —Å–Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –ø—Ä–æ–µ–∫—Ç—ã —Å–æ–∑–¥–∞—Ç–µ–ª—è:* ‚ò£Ô∏è\n"
        "üîó [@sukunasoft](https://t.me/sukunasoft)\n"
        "üîó [@perexodniksukuna](https://t.me/perexodniksukuna)",
        reply_markup=markup,
        parse_mode="Markdown"
    )

# === –§–£–ù–ö–¶–ò–Ø –£–î–ê–õ–ï–ù–ò–Ø –ü–†–ï–î–´–î–£–©–ï–ì–û –°–û–û–ë–©–ï–ù–ò–Ø (–ö–†–û–ú–ï –ú–ï–ù–Æ) ===
def delete_last_response(user_id):
    if user_id in last_response:
        try:
            bot.delete_message(user_id, last_response[user_id])
        except Exception:
            pass  # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ —É–¥–∞–ª–µ–Ω–æ, –ø—Ä–æ—Å—Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º

# === –û–ë–†–ê–ë–û–¢–ö–ê –í–´–ë–û–†–ê –§–ê–ô–õ–ê ===
@bot.callback_query_handler(func=lambda call: call.data in FILES)
def send_file(call):
    user_id = call.from_user.id
    delete_last_response(user_id)  # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–Ω–µ –º–µ–Ω—é!)

    if is_subscribed(user_id):
        file_id = FILES.get(call.data)
        caption = TEXTS.get(call.data, "‚Ñπ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ–∫–∞ –Ω–µ—Ç.")

        try:
            sent_message = bot.send_document(user_id, file_id, caption=caption, parse_mode="Markdown")
            last_response[user_id] = sent_message.message_id  # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º ID –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        except Exception as e:
            error_message = bot.send_message(user_id, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞: {str(e)}")
            last_response[user_id] = error_message.message_id
    else:
        send_subscription_request(user_id)

# === –ü–†–û–°–¨–ë–ê –ü–û–î–ü–ò–°–ê–¢–¨–°–Ø ===
def send_subscription_request(user_id):
    markup = InlineKeyboardMarkup()
    for channel in CHANNELS:
        markup.add(InlineKeyboardButton(f"–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ {channel}", url=f"https://t.me/{channel[1:]}"))
    markup.add(InlineKeyboardButton("üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="check_sub"))

    sent_message = bot.send_message(
        user_id,
        "‚ùå *–¢—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –≤—Å–µ –ø—Ä–æ–µ–∫—Ç—ã!*\n\n–ü–æ–¥–ø–∏—à–∏—Å—å –∏ –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë.",
        reply_markup=markup,
        parse_mode="Markdown"
    )
    last_response[user_id] = sent_message.message_id  # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è

# === –ü–†–û–í–ï–†–ö–ê –ü–û–î–ü–ò–°–ö–ò ===
@bot.callback_query_handler(func=lambda call: call.data == "check_sub")
def check_subscription(call):
    user_id = call.from_user.id
    delete_last_response(user_id)  # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

    if is_subscribed(user_id):
        sent_message = bot.send_message(user_id, "‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞! –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ —Ñ–∞–π–ª –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è.")
    else:
        sent_message = bot.send_message(user_id, "‚ùå –¢—ã –≤—Å—ë –µ—â—ë –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –≤—Å–µ –ø—Ä–æ–µ–∫—Ç—ã. –ü–æ–¥–ø–∏—à–∏—Å—å –∏ –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.")

    last_response[user_id] = sent_message.message_id  # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è

# === –û–ë–†–ê–ë–û–¢–ö–ê –§–ê–ô–õ–û–í –î–õ–Ø –ü–û–õ–£–ß–ï–ù–ò–Ø FILE_ID ===
@bot.message_handler(content_types=["document", "video", "audio", "photo"])
def get_file_id(message):
    if message.document:
        file_id = message.document.file_id
    elif message.video:
        file_id = message.video.file_id
    elif message.audio:
        file_id = message.audio.file_id
    elif message.photo:
        file_id = message.photo[-1].file_id  # –ë–µ—Ä–µ–º —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ —Ñ–æ—Ç–æ
    
    bot.send_message(message.chat.id, f"üìé File ID: `{file_id}`", parse_mode="Markdown")

# === –ó–ê–ü–£–°–ö –ë–û–¢–ê ===
bot.polling(none_stop=True)
